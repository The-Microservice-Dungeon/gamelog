server.port=8084

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_ADDRESS:localhost:29092}
spring.kafka.consumer.group-id=gamelog
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.[spring.deserializer.value.function]=
spring.kafka.consumer.properties.[spring.deserializer.value.delegate.class]=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.properties.[spring.deserializer.key.delegate.class]=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.properties.interceptor.classes=com.github.tmd.gamelog.adapter.event.kafka.interceptor.KafkaLoggingInterceptor,com.github.tmd.gamelog.adapter.event.kafka.interceptor.KafkaRequiredPropertiesInterceptor

# Jackson Properties
spring.jackson.mapper.accept-case-insensitive-enums=true

#logging.level.org.hibernate=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.apache.kafka = WARN
logging.level.com.github.tmd.gamelog = WARN
logging.file.path=./logs

# Database Connection
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.username=${DB_USER:root}
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost:3306}/${DB_NAME:gamelogdb}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration/{vendor}
spring.flyway.repair-on-migrate=true

# The Microservice Dungeon Configuration properties
tmd.game-service-url=${GAME_SERVICE:http://localhost:8080}
tmd.gamelog-service-url=${GAMELOG_SERVICE:http://localhost:8084}
tmd.map-service-url=${MAP_SERVICE:http://localhost:8081}
tmd.robot-service-url=${ROBOT_SERVICE:http://localhost:8082}
tmd.trading-service-url=${TRADING_SERVICE:http://localhost:8083}

# Actuator config
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
# Don't worry, secrets will be sanitized
management.endpoint.configprops.enabled=true
management.endpoint.env.enabled=true
management.endpoint.beans.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.flyway.enabled=true
management.endpoint.logfile.enabled=true
management.metrics.enable.kafka=false
management.metrics.enable.[spring.kafka]=false

management.endpoints.web.exposure.include=info,health,configprops,env,beans,metrics,logs,\
  prometheus,flyway,logfile

spring.web.resources.static-locations=file:./logs
